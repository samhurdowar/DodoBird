@using SourceControl.Services;

@{
	var vd = SessionService.VirtualDomain;

	var pageTemplateId = 645126;
	var obj = "obj" + pageTemplateId;

	var primaryKey = "guid";

}

<style>
	#grid_@pageTemplateId .k-dirty {
		border-width: 0 !important;
	}
</style>

<div style="margin-bottom:5px;">

	Select Vendor <input id='deviceVendor' name='deviceVendor' style='width:300px;' />
</div>


<div style="position:relative;width: 98%;" class="row">
	<div id="grid_@pageTemplateId" style="width:100%;"></div>
</div>


<script>


	$("#deviceVendor").kendoDropDownList({
		autoBind: true,
		optionLabel: {
			TextField: "",
			ValueField: "0"
		},
      dataTextField: "TextField",
      dataValueField: "ValueField",
      dataSource: {
         transport: {
            read: {
               dataType: "json",
               url: "@vd/App/GetDeviceVendors"
            }
         }
		},
		change: function (e) {
			var deviceVendor = $("#deviceVendor").data("kendoDropDownList").value();

			var grid = $("#grid_@pageTemplateId").data("kendoGrid");
			grid.dataSource.transport.options.read.url = "@vd/App/GetNetworkInformationContracts?deviceVendor=" + deviceVendor;
			grid.dataSource.read();

		}
   });


	var dsgrid_@pageTemplateId = new kendo.data.DataSource({
		autoSync: true,
		pageable: false,
		transport: {
			read: {
				url: "@vd/App/GetNetworkInformationContracts?deviceVendor=F5",
				dataType: "json",
				type: "post"
			},
			update: {
				url: "@vd/App/UpdateNetworkInformationContracts",
				dataType: "json",
				type: "post"
			},
			destroy: {
				url: "@vd/App/DeleteNetworkInformationContract",
				dataType: "json"
			},
			parameterMap: function (options, operation) {

				if (!options.models) return;

				// get dirty
				var grid = $("#grid_@pageTemplateId").data("kendoGrid");
				var data = grid.dataSource.data();

				var dirty = $.grep(data, function (item) {
					return item.dirty
				});

				var json = kendo.stringify(dirty).replace("[{", "{").replace("}]", "}");
				var obj = JSON && JSON.parse(json) || $.parseJSON(json);

				var recordId = eval("obj.@primaryKey");
				var columnName = CurrentColumnName;
				var columnValue = eval("obj." + CurrentColumnName);

				// reset all dirties
				$.each(data, function () {
					this.dirty = false;
				});


				return { pageTemplateId: @pageTemplateId, recordId: recordId, columnName: columnName, columnValue: columnValue };

			}
		},
		batch: true,

		schema: {
			model: {
				id: "@primaryKey",
				fields: {
					guid: { editable: false },
					startDate: { type: "date" },
					endDate: { type: "date" }
				}
			}
		}
	});

	
	var grid_@pageTemplateId = $("#grid_@pageTemplateId").kendoGrid({
		dataSource: dsgrid_@pageTemplateId,
		autoBind: false,
		scrollable: true,
		sortable: true,
		pagable: false,

		filterable: {
			extra: false,
			operators: {
				string: {
					startswith: "Starts with",
					endswith: "Ends with",
					eq: "Is equal to",
					neq: "Is not equal to",
					contains: "Contains",
					doesnotcontain: "Does not contain"
				}
			}
		},
		height: window.innerHeight - 245,
		columns: [
			{ template: "#= Site #", title: "Site" },
			{ template: "#= DeviceVendor #", title: "Vendor" },
			{ template: "#= HostName #", title: "HostName" },
			{ template: "#= DeviceModel #", title: "Model" },
			{ template: "#= SerialNumber #", title: "SerialNumber" },
			{ field: "contractNumber", title: "Contract" },

			{ field: "startDate", title: "Start Date", width: "200px", type: "number", template: "#= kendo.toString(new Date(startDate), 'MM/dd/yyyy') #", editor: editor_startDate },
			{ field: "endDate", title: "End Date", width: "200px", type: "number", template: "#= kendo.toString(new Date(endDate), 'MM/dd/yyyy') #", editor: editor_endDate },

			{ field: "poNumber", title: "PO Number" },
			{ template: "#= DeviceLocation #", title: "Device Location" },

			{ field: "licenses", title: "Licenses", editor: editor_Textarea, filterable: false },
			{ field: "notes", title: "Notes", editor: editor_Textarea, filterable: false }
		],
		editable: {
			confirmation: false
		}

	}).data('kendoGrid');

	function editor_startDate(container, options) {
		$('<input type="text" />')
			.appendTo(container)
			.kendoDatePicker({
				format: "MM/dd/yyyy",
				value: kendo.toString(new Date(options.model.startDate), 'MM/dd/yyyy')
			});
	}


	function editor_endDate(container, options) {
		$('<input type="text" />')
			.appendTo(container)
			.kendoDatePicker({
				format: "MM/dd/yyyy",
				value: kendo.toString(new Date(options.model.endDate), 'MM/dd/yyyy')
			});
	}


	function editor_Textarea(container, options) {

		$('<textarea data-text-field="Label" data-value-field="Value" data-bind="value:' + options.field + '" style="width: ' + (container.width() - 10) + 'px;height:' + (container.height() - 12) + 'px" />')
			.appendTo(container);
	}

</script>



